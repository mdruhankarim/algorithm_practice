/*E. Полка
ограничение по времени на тест1 секунда
ограничение по памяти на тест256 мегабайт
У Андрея есть младший брат Ванечка, который очень любит смотреть мультики. Ванечка вечно разбрасывал по дому и терял свои DVD с мультиками. Поэтому на день рождения Андрей подарил брату длинную полку для того, чтобы Ванечка ставил на нее свои диски. Чтобы на полке был порядок, Андрей просил Ванечку соблюдать простой порядок:

если на полке нет ни одного диска, то Ванечка просто ставит его; если диск есть, то Ванечка ставит диск либо справа, либо слева от уже расставленных; забирает диски он так же, то есть снимает только с правого или левого края.
И теперь Андрей хочет узнать, выполнил Ванечка его инструкции или нет.

Входные данные
В первой строке указано целое число N
 (1≤N≤10000)
 - количество операций, которые выполнил Ванечка.

Далее в N
 строках находится информация об операциях. Каждая операция постановки диска на полку описывается парой чисел. Первое из них (1 или 2) показывает, что диск ставится с левого края или с правого края соответственно. Второе целое число (от 0 до 10000) обозначает номер диска. Операции снятия диска с полки описывается одним числом 3 или 4, обозначающим с левого и правого края полки соответственно снимается диск.

В начальный момент полка пуста. Гарантируется, что последовательность операций корректна, нет команд снятия диска с пустой полки.

Выходные данные
Для каждой операции снятия диска с полки выведите его номер.

Примеры
Входные данныеCopy
5
1 1
2 2
1 3
3
4
Выходные данныеCopy
3 2 
Входные данныеCopy
2
1 1
3
Выходные данныеCopy
1 */


#include<bits/stdc++.h>
using namespace std;
int main() {
    int n;
    cin >> n;
    deque<int> shelf;
    for (int i = 0; i < n; i++) {
        int operation;
        cin >> operation;
        if (operation == 1 || operation == 2) {
            int discNumber;
            cin >> discNumber;
            if (operation == 1) {
                shelf.push_front(discNumber);
            } else {
                shelf.push_back(discNumber);
            }
        } else if (operation == 3) {
            cout << shelf.front() << " ";
            shelf.pop_front();
        } else if (operation == 4) {
            cout << shelf.back() << " ";
            shelf.pop_back();
        }
    }
    return 0;
}
